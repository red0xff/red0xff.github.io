<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>security on Redouane</title>
    <link>https://red0xff.github.io/tags/security/</link>
    <description>Recent content in security on Redouane</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 05 Feb 2022 11:15:58 +0200</lastBuildDate><atom:link href="https://red0xff.github.io/tags/security/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Inverting Keccak-f if the sponge leaks</title>
      <link>https://red0xff.github.io/posts/inverting_keccak_f/</link>
      <pubDate>Sat, 05 Feb 2022 11:15:58 +0200</pubDate>
      
      <guid>https://red0xff.github.io/posts/inverting_keccak_f/</guid>
      <description>What is SHA3 SHA3 is a family of standarised cryptographic hashing functions, it&amp;rsquo;s the winner of the 2012 NIST hash function contest.
reminder (click to expand)
 a cryptographic hash function is a fast one-way function that associates a fixed-size digest to variable-size inputs, a good hash function must satisfy the following properties:
 Collision resistance: It should be difficult to find two messages that have the same hash.</description>
    </item>
    
    <item>
      <title>GSoC 2020 - Enhancing metasploit support for &#39;the Hack That Will Never Go Away&#39;</title>
      <link>https://red0xff.github.io/posts/google_summer_of_code_2020/</link>
      <pubDate>Sat, 29 Aug 2020 16:45:58 +0200</pubDate>
      
      <guid>https://red0xff.github.io/posts/google_summer_of_code_2020/</guid>
      <description>Table of Contents  Introduction My Proposal Community-Bonding period Results of my contribution My Google Summer of Code journey  Initial work SQLite support and specs for the library Support for PostgreSQL, and other database-management systems   Conclusion  Introduction Being interested in computer security, and being an opensource lover, I wanted to participate in Google Summer of Code this year, after checking out the list of organizations, I applied for Metasploit, because Ruby is my main programming language, and because I was very interested in contributing to a framework of this popularity.</description>
    </item>
    
    <item>
      <title>VolgaCTF 2020 Qualifier - F-Hash writeup</title>
      <link>https://red0xff.github.io/writeups/volgactf_fhash/</link>
      <pubDate>Sat, 28 Mar 2020 00:00:00 +0200</pubDate>
      
      <guid>https://red0xff.github.io/writeups/volgactf_fhash/</guid>
      <description>Table of Contents  The Challenge Initial recon Algorithm Optimization  Dynamic programming (the Bottom-up approach) Memoization (Top-down approach)   Solution  Allocating memory for our memoization code, and for our results array How we will add code at the beginning and end of recursive_fun First shellcode: checking if the result is already computed at the beginning of the function Second shellcode: cache results at the end of the function How to assemble shellcodes Other things to keep in mind Final gdb script that automates solving it (using the peda patch command)    The Challenge We are given a binary file, and a short challenge description, you can download the file here</description>
    </item>
    
    <item>
      <title>HITB&#43; Cyberweek 2019</title>
      <link>https://red0xff.github.io/about/hitb19/</link>
      <pubDate>Mon, 14 Oct 2019 00:00:00 +0200</pubDate>
      
      <guid>https://red0xff.github.io/about/hitb19/</guid>
      <description>The event was held from October 14th to October 18th, at the Emirates Palace at Abu Dhabi, UAE.
We were invited to participate in the Standoff, the contest was about doing penetration testing in a fictional industrial city, spanning about 17 square meters (183 square feet) and containing thousands of figurines. The mock city model allowed demonstrating consequences of real cyberattacks against critical infrastructure.</description>
    </item>
    
    <item>
      <title>Writeup of the Richelieu challenge</title>
      <link>https://red0xff.github.io/writeups/richelieu_challenge_writeup/</link>
      <pubDate>Fri, 14 Jun 2019 14:55:32 +0200</pubDate>
      
      <guid>https://red0xff.github.io/writeups/richelieu_challenge_writeup/</guid>
      <description>Table of Contents  The Challenge The Solution  Initial Recon a bit of History The First Portrait The Crypto part The Second portrait Reverse Engineering Relative paths : a bad idea? Buffer overflow like in 1999 The best things in life are free()   Conclusion  The Challenge The French external intelligence agency, known as the DGSE, published a cybersecurity challenge, the challenge remained open till June 14th 2019, in this writeup, I will try to explain every step of its solution.</description>
    </item>
    
    <item>
      <title>HackINI 2018 : Some Writeups</title>
      <link>https://red0xff.github.io/writeups/hackini18/</link>
      <pubDate>Mon, 12 Feb 2018 00:00:00 +0200</pubDate>
      
      <guid>https://red0xff.github.io/writeups/hackini18/</guid>
      <description>The Event HackINI (stands for Hack Initiation) is an event that is held once a year at the higher national school of computer science at Algiers, in a whole day, a CTF competition and workshops on various information security subdomains are held in parallel, this year, it was held on February 10th.

The challenges of the CTF competition are mostly easy-medium, this post will contain some writeups on some of the tasks.</description>
    </item>
    
    <item>
      <title>Himayatic 2017 - Rev400 Writeup</title>
      <link>https://red0xff.github.io/writeups/himayatic17_rev400/</link>
      <pubDate>Sun, 05 Nov 2017 00:00:00 +0200</pubDate>
      
      <guid>https://red0xff.github.io/writeups/himayatic17_rev400/</guid>
      <description>Hello, today I&amp;rsquo;ll crack a .NET crackme, it was featured on Himayatic CTF, November 2nd 2017. Download link : https://drive.google.com/open?id=0B7U3AsTA9UVfRHdTY2hfQzZrQm8
Let&amp;rsquo;s start :) First, we notice that it&amp;rsquo;s a .NET crackme, it asks for a serial, and displays &amp;quot;Wrong Serial ... !!!&amp;quot; when we enter a random one.

We open it in a .NET decompiler (I used dnSpy, which is a fork of ILSpy), and we immediately locate this function :</description>
    </item>
    
  </channel>
</rss>
